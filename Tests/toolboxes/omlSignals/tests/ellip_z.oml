addtoolbox omlsignals

function result = EllipLP()
	result = 'fail';
	dBp = 1;
	dBs = 30;
	fc = 200;
	fs = 1000;
	fn = fc / (fs/2);

	for order=1:9
		[num,den] = ellip(order, dBp, dBs, fn);

		if (length(num) ~= order + 1)
			break;
		end

		if (length(den) ~= order + 1)
			break;
		end

		f = [0,fc-1,fc,fc+1,fs/2];
		m = abs(freqz(num,den,f,fs));
		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(1)) - dBp) > 1.0e-4)
				break;
			end
		else
			if (abs(m(1) - 1.0) > 1.0e-4)
				break;
			end
		end

		if (-20 * log10(m(2)) > dBp)
			break;
		end

		if (abs(-20 * log10(m(3)) - dBp) > 1.0e-4)
			break;
		end

		if (-20 * log10(m(4)) < dBp)
			break;
		end

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(5)) - dBs) > 1.0e-4)
				break;
			end
		else
			if (m(5) > 1.0e-4)
				break;
			end
		end

		order = order + 1;
	end

	if (order == 10)
		result = 'pass';
	end
end

function result = EllipHP()
	result = 'fail';
	dBp = 1;
	dBs = 30;
	fc = 300;
	fs = 1000;
	fn = fc / (fs/2);

	for order=1:9
		[num,den] = ellip(order, dBp, dBs, fn, 'high');

		if (length(num) ~= order + 1)
			break;
		end

		if (length(den) ~= order + 1)
			break;
		end

		f = [0,fc-1,fc,fc+1,fs/2];
		m = abs(freqz(num,den,f,fs));

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(1)) - dBs) > 1.0e-4)
				break;
			end
		else
			if (m(1) > 1.0e-4)
				break;
			end
		end

		if (-20 * log10(m(2)) < dBp)
			break;
		end

		if (abs(-20 * log10(m(3)) - dBp) > 1.0e-4)
			break;
		end

		if (-20 * log10(m(4)) > dBp)
			break;
		end

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(5)) - dBp) > 1.0e-4)
				break;
			end
		else
			if (log10(m(5)) > 1.0e-4)
				break;
			end
		end

		order = order + 1;
	end

	if (order == 10)
		result = 'pass';
	end
end

function result = EllipBP()
	result = 'fail';
	dBp = 1;
	dBs = 30;
	fc1 = 200;
	fc2 = 350;
	fs = 1000;
	fn1 = fc1 / (fs/2);
	fn2 = fc2 / (fs/2);
	fcc = (fs/pi)*atan(sqrt(tan(fc1*pi/fs)*tan(fc2*pi/fs)));

	for order=1:9
		[num,den] = ellip(order, dBp, dBs, [fn1, fn2]);

		if (length(num) ~= 2 * order + 1)
			break;
		end

		if (length(den) ~= 2 * order + 1)
			break;
		end

		f = [0,fc1-1,fc1,fc1+1,fcc,fc2-1,fc2,fc2+1,fs/2];
		m = abs(freqz(num,den,f,fs));

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(1)) - dBs) > 1.0e-4)
				break;
			end
		else
			if (m(1) > 1.0e-4)
				break;
			end
		end

		if (-20 * log10(m(2)) < dBp)
			break;
		end

		if (abs(-20 * log10(m(3)) - dBp) > 1.0e-4)
			break;
		end

		if (-20 * log10(m(4)) > dBp)
			break;
		end

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(5)) - dBp) > 1.0e-4)
				break;
			end
		else
			if (abs(m(5) - 1.0) > 1.0e-4)
				break;
			end
		end

		if (-20 * log10(m(6)) > dBp)
			break;
		end

		if (abs(-20 * log10(m(7)) - dBp) > 1.0e-4)
			break;
		end

		if (-20 * log10(m(8)) < dBp)
			break;
		end

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(9)) - dBs) > 1.0e-4)
				break;
			end
		else
			if (m(9) > 1.0e-4)
				break;
			end
		end

		order = order + 1;
	end

	if (order == 10)
		result = 'pass';
	end
end

function result = EllipBS()
	result = 'fail';
	dBp = 1;
	dBs = 30;
	fc1 = 200;
	fc2 = 350;
	fs = 1000;
	fn1 = fc1 / (fs/2);
	fn2 = fc2 / (fs/2);
	fcc = (fs/pi)*atan(sqrt(tan(fc1*pi/fs)*tan(fc2*pi/fs)));

	for order=1:9
		[num,den] = ellip(order, dBp, dBs, [fn1, fn2], 'stop');

		if (length(num) ~= 2 * order + 1)
			break;
		end

		if (length(den) ~= 2 * order + 1)
			break;
		end

		f = [0,fc1-1,fc1,fc1+1,fcc,fc2-1,fc2,fc2+1,fs/2];
		m = abs(freqz(num,den,f,fs));

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(1)) - dBp) > 1.0e-4)
				break;
			end
		else
			if (abs(m(1) - 1.0) > 1.0e-4)
				break;
			end
		end

		if (-20 * log10(m(2)) > dBp)
			break;
		end

		if (abs(-20 * log10(m(3)) - dBp) > 1.0e-4)
			break;
		end

		if (-20 * log10(m(4)) < dBp)
			break;
		end

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(5)) - dBs) > 1.0e-4)
				break;
			end
		else
			if (m(5) > 1.0e-4)
				break;
			end
		end

		if (-20 * log10(m(6)) < dBp)
			break;
		end

		if (abs(-20 * log10(m(7)) - dBp) > 1.0e-4)
			break;
		end

		if (-20 * log10(m(8)) > dBp)
			break;
		end

		if (mod(order,2) == 0)
			if (abs(-20 * log10(m(9)) - dBp) > 1.0e-4)
				break
			end
		else
			if (abs(m(9) - 1.0) > 1.0e-4)
				break;
			end
		end

		order = order + 1;
	end

	if (order == 10)
		result = 'pass';
	end
end

ellipLP = EllipLP()
ellipHP = EllipHP()
ellipBP = EllipBP()
ellipBS = EllipBS()
