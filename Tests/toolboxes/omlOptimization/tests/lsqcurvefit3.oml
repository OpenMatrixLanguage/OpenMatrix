addtoolbox omlOptimization
% with user parameter passing via a function handle

function [res,Jac] = FittingFunc(c,t,five,seven)
    % c is the parameter vector
    % t is the independent variable
    % the model is y = c1 * exp(-c2*t)
    % compute the vector of residuals
    res = c(1) * exp(-c(seven-five)*t);

    if nargout > 1
        % Jacobian
        Jac = zeros(4,2);
        Jac(:,1) = exp(-c(2)*t);
        Jac(:,2) = -t * c(1) .* exp(-c(2)*t);
    end
end

handle = @(c,t) FittingFunc(c,t,5,7);
init = [15, 1];
t = [1; 2; 3; 4];
x = [8.025, 3.975, 2.025, 0.975];
options = optimset('MaxIter', 200, 'TolFun', 1.0e-12, 'TolX', 1.0e-4);

[p,resnorm] = lsqcurvefit(handle, init, t, x, [], [], options)

