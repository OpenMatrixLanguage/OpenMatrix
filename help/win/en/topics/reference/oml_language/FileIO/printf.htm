
<!DOCTYPE html
  PUBLIC "" "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-us" lang="en-us">
<head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />        
      <meta name="copyright" content="(C) Copyright 2021" /><meta name="DC.rights.owner" content="(C) Copyright 2021" /><meta name="DC.Type" content="reference" /><meta name="DC.Title" content="printf" /><meta name="abstract" content="Displays the string str to the Command window or Console prompt." /><meta name="description" content="Displays the string str to the Command window or Console prompt." /><meta name="DC.Coverage" content="OpenMatrix Language" /><meta name="indexterms" content="printf" /><meta name="DC.subject" content="printf" /><meta name="keywords" content="printf" /><meta name="DC.Relation" scheme="URI" content="../../../../topics/reference/oml_language/FileIO/fileio_commands.htm" /><meta name="DC.Relation" scheme="URI" content="../../../../topics/reference/oml_language/FileIO/fprintf.htm" /><meta name="DC.Relation" scheme="URI" content="../../../../topics/reference/oml_language/StringOperations/sscanf.htm" /><meta name="DC.Relation" scheme="URI" content="../../../../topics/reference/oml_language/StringOperations/sprintf.htm" /><meta name="DC.Format" content="XHTML" /><meta name="DC.Identifier" content="reference_wpv_kyv_pr" /><link rel="stylesheet" type="text/css" href="../../../../oxygen-webhelp/resources/css/commonltr.css?buildId=2018042310"><!----></link><title>printf</title><!--  Generated with Oxygen version 20.0-SNAPSHOT, build number 2018042310.  --><link rel="stylesheet" type="text/css" href="../../../../oxygen-webhelp/resources/css/webhelp_topic.css?buildId=2018042310"><!----></link><link rel="stylesheet" type="text/css" href="../../../../oxygen-webhelp/resources/skins/skin.css?buildId=2018042310" /><link rel="stylesheet" type="text/css" href="../../../../open_matrix_custom.css" /><script type="text/javascript"><!--
          
          var prefix = "../../../../index.htm";
          
          --></script><script type="text/javascript" src="../../../../oxygen-webhelp/resources/js/jquery-3.1.1.min.js"><!----></script><script type="text/javascript" src="../../../../oxygen-webhelp/resources/js/jquery.cookie.js"><!----></script><script type="text/javascript" src="../../../../oxygen-webhelp/resources/js/jquery.highlight-3.js"><!----></script><script type="text/javascript" charset="utf-8" src="../../../../oxygen-webhelp/resources/js/log.js?buildId=2018042310"><!----></script><script type="text/javascript" charset="utf-8" src="../../../../oxygen-webhelp/resources/js/webhelp_topic.js?buildId=2018042310"><!----></script></head>
<body onload="highlightSearchTerm()" class="frmBody" id="reference_wpv_kyv_pr">
<header role="banner"><table class="nav"><tbody><tr><td colspan="2"><div id="printlink"><a href="javascript:window.print();" title="Print this page"></a></div><div id="permalink"><a href="#" title="Link to this page"></a></div></td></tr><tr><td style="width:75%;"><span class="topic_breadcrumb_links"><span class="topic_breadcrumb_link"><a class="navheader_parent_path" href="../../../../topics/reference/oml_language/FileIO/../../../../topics/reference/oml_language/oml_reference_guide_r.htm" title="The Reference Guide contains documentation for all functions supported in the OpenMatrix language.">Reference Guide for OpenMatrix Language Functions</a></span><span class="topic_breadcrumb_link"><a class="navheader_parent_path" href="../../../../topics/reference/oml_language/FileIO/fileio_commands.htm" title="File I/O Commands">File I/O Commands</a></span></span></td><td><span id="topic_navigation_links" class="navheader">
<span class="navparent"><a class="link" href="../../../../topics/reference/oml_language/FileIO/fileio_commands.htm" title="File I/O Commands"><span class="navheader_label">Parent topic</span><span class="navheader_separator">: </span><span class="navheader_linktext">File I/O Commands</span></a></span>  </span></td></tr></tbody></table></header><main role="main"><article role="article" aria-labelledby="ariaid-title1">
  <h1 class="title topictitle1" id="ariaid-title1">printf</h1>

  
  
  <div class="body refbody"><p class="shortdesc">Displays the string <var class="keyword varname">str</var> to the Command window or Console prompt.</p>

    <section class="section"><h2 class="title sectiontitle">Syntax</h2>
      <p class="p"><span class="ph synph">R = printf<span class="ph var">(str)</span></span></p>

	  <p class="p"><span class="ph synph">R = printf<span class="ph var">(format_string, var1, ...)</span></span></p>
<?STOP?></section>

    <section class="section"><h2 class="title sectiontitle"><span class="keyword">Inputs</span></h2>
      
      <dl class="dl parml">
        
          <dt class="dt pt dlterm"><var class="keyword varname">str</var></dt>

          <dd class="dd pd">Text to be displayed.</dd>

          <dd class="dd pd ddexpand">Type: <span class="keyword">char | string</span></dd>

        
        
          <dt class="dt pt dlterm"><var class="keyword varname">format_string</var></dt>

          <dd class="dd pd">The <var class="keyword varname">format_string</var> can consist of text to be displayed and any
            number of placeholders for one or more variables.</dd>

          <dd class="dd pd ddexpand">See <cite class="cite">Comments </cite>below for additional information.</dd>

          <dd class="dd pd ddexpand">Type: <span class="keyword">char | string</span></dd>

        
        
          <dt class="dt pt dlterm"><var class="keyword varname">var1, ...</var></dt>

          <dd class="dd pd">Zero, one, or more variable names can be specified after the
              <var class="keyword varname">format_string</var>. For proper format control, care should be exercised
            in matching the variable type with the placeholder type in the
              <var class="keyword varname">format_string</var>.</dd>

          <dd class="dd pd ddexpand">See <cite class="cite">Comments </cite>below for additional information.</dd>

          <dd class="dd pd ddexpand">Type: <span class="keyword">char | string</span></dd>

        
      </dl>

      <?STOPINP?></section>

    <section class="section"><h2 class="title sectiontitle"><span class="keyword">Outputs</span></h2>
      
      <dl class="dl parml">
        
          <dt class="dt pt dlterm"><span class="ph synph">R</span></dt>

          <dd class="dd pd">The number of characters printed.</dd>

          <dd class="dd pd ddexpand">Type: <span class="keyword">integer</span></dd>

        
      </dl>

      <?STOPOUT?>
    </section>

        <section class="section"><h2 class="title sectiontitle">Examples</h2>
      
      <p class="p">Simple <span class="keyword cmdname">printf</span> example to display a string:</p>

      <pre class="pre codeblock"><code>printf('hello world')</code></pre>
      <pre class="pre codeblock"><code><code class="ph codeph">hello world</code></code></pre>
      <p class="p">Complex <span class="keyword cmdname">printf</span> example showing a number of format controls:</p>

      <pre class="pre codeblock"><code>test = 'test';
printf('\n')
printf('print %-8s %-22s **%s**\n', 'string', ' ', test)
printf('print %-8s %-22s **%10s**\n', 'string', 'minimum size', test)
printf('print %-8s %-22s **%-10s**\n', 'string', 'string left justified', test)
printf('\n') % print blank line between sections

numtest = 1234568;
printf('\n')
printf('print %-8s %-22s **%d**\n', 'number', ' ', numtest)
printf('print %-8s %-22s **%10d**\n', 'number', 'minimum size', numtest)
printf('print %-8s %-22s **%-10d**\n', 'number', 'left justified', numtest)
printf('print %-8s %-22s **%010d**\n', 'number', 'zero fill', numtest)
printf('\n') % print blank line between sections

format('long')
floatest = 120 + pi
printf('\n')
printf('print %-8s %-22s **%f**\n', 'float', ' ', floatest)
printf('print %-8s %-22s **%14f**\n', 'float', 'minimum width', floatest)
printf('print %-8s %-22s **%-14f**\n', 'float', 'left justified', floatest)
printf('print %-8s %-22s **%014f**\n', 'float', 'zero filled', floatest)
printf('print %-8s %-22s **%014.3f**\n', 'float', '3 decimal restriction', floatest)
printf('print %-8s %-22s **%014.8f**\n', 'float', '8 decimal expansion', floatest)</code></pre>
      <pre class="pre codeblock"><code><code class="ph codeph">print string                          **test**
print string   minimum size           **      test**
print string   string left justified  **test      **
print number                          **1234568**
print number   minimum size           **   1234568**
print number   left justified         **1234568   **
print number   zero fill              **0001234568**
floatest = 123.14159265
print float                           **123.141593**
print float    minimum width          **    123.141593**
print float    left justified         **123.141593    **
print float    zero filled            **0000123.141593**
print float    3 decimal restriction  **0000000123.142**
print float    8 decimal expansion    **00123.14159265**</code></code></pre>
    </section>

   <section class="section"><h2 class="title sectiontitle">Comments</h2>
      
      <p class="p">The format_string follows the conventions for the C language printf format string.</p>

      <p class="p">Text is written as entered into the format string. Variables are written as placeholders,
        identified by % (percent sign), and occur in the  format string. Different variable types
        requre different placeholder characters, as follows:     %d  for integer variables. %s  for
        string variables. %f  for floating point variables %e  prints scientific notation for
        integers and floating point variables. %g  prints integer or floating point variables using
        scientific notation if necessary. %%  prints a single '%' (percent sign) character. \n
        represents a newline.  Text following the newline will begin output on the next line.
        Modifiers can be specified for each placeholder type to control the width of characters
        printed, left or right justification, space or zero filled, and decimal numbers displayed.
        A selection of modifiers is discussed below.     %d Modifiers %10d      Adding a number
        after the % controls the minimum width of the printed variable.                  The example
        prints a decimal number right-justified, space-filled in a 10 character column. %-10
        Adding minus sign '-' after the % prints a decimal number left-justified.
        The example prints left-justified within a 10 character column. %010d     Adding a lead zero
        after the % print a decimal number with lead zeros.                   The example prints
        right-justified, zero-filled within a 10 character column.  %s Modifiers %10s      Adding a
        number after the % controls the minimum width of the printed string.                  The
        example prints a string right-justified, space-filled in a 10 character column. %-10s
        Adding minus sin '-' after the % prints a string left-justified.                 The example
        prints left-justified within a 10 character column.     %f Modifiers %10f      Adding a
        number after the % controls the minimum width of the printed variable.                 The
        example prints a variable right-justified, space-filled in a 10 character column. %-10f
        Adding minus sign '-' after the % prints a string left-justified.                 The
        example prints left-justified within a 10 character column. %010f     Adding a lead zero
        after the % prints a variable with lead zeros.                  The example prints
        right-justified, zero-filled within a 10 character column. %10.3f    Adding a decimal after
        the % prints can restrict or expand the default number of decimals printed.  The example
        prints right-justified, space-filled within a 10 character column with 3 decimals. </p>

    </section>

    <section class="section">
      
      
    </section>

  </div>

<nav role="navigation" class="related-links">
<div class="linklist linklist"><strong>See Also</strong><br />

<div class="related_link"><a class="navheader_parent_path" href="../../../../topics/reference/oml_language/FileIO/fprintf.htm" title="This function writes output to a file using the printf format_string capabilities. The first argument is a fileID returned from an earlier call to fopen.">fprintf</a></div>
<div class="related_link"><a class="navheader_parent_path" href="../../../../topics/reference/oml_language/StringOperations/sscanf.htm" title="Returns result R after reading a formatted string s, specified by template t.">sscanf</a></div>
<div class="related_link"><a class="navheader_parent_path" href="../../../../topics/reference/oml_language/StringOperations/sprintf.htm" title="Returns a formatted string, based on the format, strformat specified.">sprintf</a></div></div>
</nav></article></main><footer role="contentinfo"><div class="navfooter"><!---->
<span class="navparent"><a class="link" href="../../../../topics/reference/oml_language/FileIO/fileio_commands.htm" title="File I/O Commands"><span class="navheader_label">Parent topic</span><span class="navheader_separator">: </span><span class="navheader_linktext">File I/O Commands</span></a></span>  </div><div class="footer" id="webhelp_copyright_information">
        
        <div>
            <p>(c) Altair Engineering, Inc. and Contributors. (2007-2021)</p>
               
        </div>
    </div></footer></body>
</html>