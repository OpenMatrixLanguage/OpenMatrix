
<!DOCTYPE html
  PUBLIC "" "about:legacy-compat">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-us" lang="en-us">
<head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />        
      <meta name="copyright" content="(C) Copyright 2023" /><meta name="DC.rights.owner" content="(C) Copyright 2023" /><meta name="DC.Type" content="reference" /><meta name="DC.Title" content="Function Definitions" /><meta name="abstract" content="Define functions using the function keyword." /><meta name="description" content="Define functions using the function keyword." /><meta name="indexterms" content="function defintions" /><meta name="DC.subject" content="function defintions" /><meta name="keywords" content="function defintions" /><meta name="DC.Relation" scheme="URI" content="../../topics/language_guides/functions.htm" /><meta name="DC.Relation" scheme="URI" content="../../topics/language_guides/anonymous_functions_r.htm" /><meta name="DC.Relation" scheme="URI" content="../../topics/language_guides/clearing_functions_r.htm" /><meta name="DC.Relation" scheme="URI" content="../../topics/language_guides/function_calls_r.htm" /><meta name="DC.Relation" scheme="URI" content="../../topics/language_guides/local_functions_r.htm" /><meta name="DC.Relation" scheme="URI" content="../../topics/language_guides/nested_functions_r.htm" /><meta name="DC.Relation" scheme="URI" content="../../topics/language_guides/recursion_r.htm" /><meta name="prodname" content="OpenMatrix" /><meta name="DC.Format" content="XHTML" /><meta name="DC.Identifier" content="reference_vgn_1vh_vt" /><link rel="stylesheet" type="text/css" href="../../oxygen-webhelp/resources/css/commonltr.css?buildId=2018042310"><!----></link><title>Function Definitions</title><!--  Generated with Oxygen version 20.0-SNAPSHOT, build number 2018042310.  --><link rel="stylesheet" type="text/css" href="../../oxygen-webhelp/resources/css/webhelp_topic.css?buildId=2018042310"><!----></link><link rel="stylesheet" type="text/css" href="../../open_matrix_custom.css" /><script type="text/javascript"><!--
          
          var prefix = "../../index.htm";
          
          --></script><script type="text/javascript" src="../../oxygen-webhelp/resources/js/jquery-3.1.1.min.js"><!----></script><script type="text/javascript" src="../../oxygen-webhelp/resources/js/jquery.cookie.js"><!----></script><script type="text/javascript" src="../../oxygen-webhelp/resources/js/jquery.highlight-3.js"><!----></script><script type="text/javascript" charset="utf-8" src="../../oxygen-webhelp/resources/js/log.js?buildId=2018042310"><!----></script><script type="text/javascript" charset="utf-8" src="../../oxygen-webhelp/resources/js/webhelp_topic.js?buildId=2018042310"><!----></script></head>
<body onload="highlightSearchTerm()" class="frmBody" id="reference_vgn_1vh_vt">
<header role="banner"><table class="nav"><tbody><tr><td colspan="2"><div id="printlink"><a href="javascript:window.print();" title="Print this page"></a></div><div id="permalink"><a href="#" title="Link to this page"></a></div></td></tr><tr><td style="width:75%;"><span class="topic_breadcrumb_links"><span class="topic_breadcrumb_link"><a class="navheader_parent_path" href="../../topics/language_guides/../../topics/language_guides/language_guide_intro_header_c.htm" title="OpenMatrix is a mathematical scripting language.">Scripting Guide for OpenMatrix Language</a></span><span class="topic_breadcrumb_link"><a class="navheader_parent_path" href="../../topics/language_guides/functions.htm" title="Functions are packets of statements that can be used repeatedly.">Functions</a></span></span></td><td><span id="topic_navigation_links" class="navheader">
<span class="navparent"><a class="link" href="../../topics/language_guides/functions.htm" title="Functions are packets of statements that can be used repeatedly."><span class="navheader_label">Parent topic</span><span class="navheader_separator">: </span><span class="navheader_linktext">Functions</span></a></span>  </span></td></tr></tbody></table></header><main role="main"><article role="article" aria-labelledby="ariaid-title1">
  <h1 class="title topictitle1" id="ariaid-title1">Function Definitions</h1>

  
  
  <div class="body refbody"><p class="shortdesc">Define functions using the <span class="keyword cmdname">function</span> keyword.</p>

    <section class="section">
      <div class="p">There are several valid declaration formats depending on the number of inputs and
          outputs.<table cellpadding="4" cellspacing="0" summary="" id="reference_vgn_1vh_vt__simpletable_lqy_pvh_vt" border="1" class="simpletable"><col style="width:25%" /><col style="width:25%" /><col style="width:25%" /><col style="width:25%" /><thead><tr class="sthead">
            <th style="vertical-align:bottom;text-align:left;" id="d4714e41" class="stentry"> </th>

            <th style="vertical-align:bottom;text-align:left;" id="d4714e43" class="stentry">0 inputs</th>

            <th style="vertical-align:bottom;text-align:left;" id="d4714e46" class="stentry">1 inputs</th>

            <th style="vertical-align:bottom;text-align:left;" id="d4714e49" class="stentry">N inputs</th>

          </tr>
</thead><tbody><tr class="strow">
            <td style="vertical-align:top;" headers="d4714e41" class="stentry">0 output</td>

            <td style="vertical-align:top;" headers="d4714e43" class="stentry"><span class="ph synph">function myfunc()</span></td>

            <td style="vertical-align:top;" headers="d4714e46" class="stentry"><span class="ph synph">function myfunc(in)</span></td>

            <td style="vertical-align:top;" headers="d4714e49" class="stentry"><span class="ph synph">function myfunc(in1, …, inN)</span></td>

          </tr>
<tr class="strow">
            <td style="vertical-align:top;" headers="d4714e41" class="stentry">1 output</td>

            <td style="vertical-align:top;" headers="d4714e43" class="stentry"><span class="ph synph">function out=myfunc()</span></td>

            <td style="vertical-align:top;" headers="d4714e46" class="stentry"><span class="ph synph">function out=myfunc(in)</span></td>

            <td style="vertical-align:top;" headers="d4714e49" class="stentry"><span class="ph synph">function out=myfunc(in1, …, inN)</span></td>

          </tr>
<tr class="strow">
            <td style="vertical-align:top;" headers="d4714e41" class="stentry">N outputs</td>

            <td style="vertical-align:top;" headers="d4714e43" class="stentry"><span class="ph synph">function [out1, …, outN]=myfunc()</span></td>

            <td style="vertical-align:top;" headers="d4714e46" class="stentry"><span class="ph synph">function [out1, …, outN]=myfunc(in)</span></td>

            <td style="vertical-align:top;" headers="d4714e49" class="stentry"><span class="ph synph">function [out1, …, outN]=myfunc(in1, …, inN)</span></td>

          </tr>
</tbody></table>
For the 0 input cases, the ()’s are optional.</div>

      <p class="p">The name of the function (<span class="keyword cmdname">myfunc</span> in this case) must be a valid
        identifier.</p>

      <p class="p">After the declaration comes the function body. This is a list of statements that will be
        executed when the function is called. A function is terminated by the <span class="keyword cmdname">end</span>
        keyword.</p>

      <div class="p">Any input to the function can be used like normal variables. Changes to input variables are
        NOT reflected in the source at call time. This paradigm is referred to as pass-by-value.
        For example:<pre class="pre codeblock"><code>function halve(a)
      a=a/2
end</code></pre>This function has no
        effect. It divides the local variable <span class="ph synph">a</span> by 2, but this change is not
        propagated outside of the function. (To do this, see the <span class="keyword cmdname">global</span> keyword.) </div>

      <p class="p">Variable names (input or output) are also unique to the function. A single variable name
        can be used by multiple functions without conflict. </p>

      <p class="p">Input variable values are re-initialized at each function call. Any local variables created
        in the function are released when the function ends. They are then recreated at each
        subsequent function call. To have local variable values retained between function calls, see
        the <span class="keyword cmdname">persistent</span> keyword.</p>

      <div class="p">When the function ends, the value of the output variables are used for any assignment to
        the left of the function
        call.<pre class="pre codeblock"><code>function z=myfun(a)
      z=a-1
end
y=myfun(3) % y will have a value of 2</code></pre></div>

      <div class="p">The function body can include calls to other functions as well as include calls to itself.
        This is referred to as
        recursion.<pre class="pre codeblock"><code>function b=factorial(a)
      if a==1   
         b=1
      else   
         b=factorial(a-1)*a
      end
end</code></pre></div>

      <p class="p">If a function is defined in its own file, the final (and only the final)
          <code class="ph codeph">end</code> is optional.</p>

      
    </section>

  </div>

<nav role="navigation" class="related-links">
<div class="linklist linklist"><strong>See Also</strong><br />

<div class="related_link"><a class="navheader_parent_path" href="../../topics/language_guides/anonymous_functions_r.htm" title="Anonymous functions can be defined anywhere inside a script.">Anonymous Functions</a></div>
<div class="related_link"><a class="navheader_parent_path" href="../../topics/language_guides/clearing_functions_r.htm" title="Use the clear command (passing the function name as an argument) to clear (delete) a function from the session and make it inaccessible.">Clearing Functions</a></div>
<div class="related_link"><a class="navheader_parent_path" href="../../topics/language_guides/function_calls_r.htm" title="Functions are packets of statements that can be used repeatedly. They can accept any number of inputs and can return any number of outputs.">Function Calls</a></div>
<div class="related_link"><a class="navheader_parent_path" href="../../topics/language_guides/local_functions_r.htm" title="If a function is defined in its own file, the function name must match the file name.">Local Functions</a></div>
<div class="related_link"><a class="navheader_parent_path" href="../../topics/language_guides/nested_functions_r.htm" title="Nested functions are functions within the main function.">Nested Functions</a></div>
<div class="related_link"><a class="navheader_parent_path" href="../../topics/language_guides/recursion_r.htm" title="The function body can include calls to other functions and calls to itself. This is referred to as recursion.">Recursion</a></div></div>
</nav></article></main><footer role="contentinfo"><div class="navfooter"><!---->
<span class="navparent"><a class="link" href="../../topics/language_guides/functions.htm" title="Functions are packets of statements that can be used repeatedly."><span class="navheader_label">Parent topic</span><span class="navheader_separator">: </span><span class="navheader_linktext">Functions</span></a></span>  </div><div class="footer" id="webhelp_copyright_information">
        
        <div>
            <p>(c) Altair Engineering, Inc. and Contributors. (2007-2023)</p>
               
        </div>
    </div></footer></body>
</html>