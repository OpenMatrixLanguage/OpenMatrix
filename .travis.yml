notifications:
  _webhooks: _
install: true
language: cpp
addons:
  apt:
   sources:
    - ubuntu-toolchain-r-test
   packages:
  apt_packages:
    - gfortran
sudo: required
python: 
- '3.6'
before_install:
- git clone --depth=50 --branch=master https://github.com/OpenMatrixLanguage/Continuous_Integration_Linux_OS66.git Linux
#- if [ "$CXX" = "g++" ]; then export CXX="g++-4.9" CC="gcc-4.9"; fi
env:
  SH=bash
  OML_ROOT=$PWD
  OML_THIRDPARTY=$PWD/Linux/third_party
  PATH=$PATH:$OML_ROOT/src/bin/linux64
  OML_PYTHONHOME=/usr
  OML_PYTHONVERSION=python3
  OML_PYTHON_NUMPYDIR=$OML_PYTHONHOME/lib/$OML_PYTHONVERSION/dist-packages/numpy/core/include/numpy/
  KMP_AFFINITY=compact,1,0,granularity=fine
before_script:
script:
- export LD_LIBRARY_PATH=$OML_THIRDPARTY/intel/compilers_and_libraries_2019.5.281/linux/mkl/lib/intel64_lin:$LD_LIBRARY_PATH
- export LD_LIBRARY_PATH=$OML_THIRDPARTY/intel/compilers_and_libraries_2019.5.281/linux/compiler/lib/intel64_lin:$LD_LIBRARY_PATH
- export LD_LIBRARY_PATH=$OML_THIRDPARTY/fftw/fftw-3.2.2/.libs:$OML_THIRDPARTY/ANTLR/libantlr3c-3.4/.libs:$LD_LIBRARY_PATH
- export LD_LIBRARY_PATH=$OML_THIRDPARTY/matio/matio-1.5.19/linux64/lib64:$OML_THIRDPARTY/hdf/hdf5-1.12.0/linux64/lib:$LD_LIBRARY_PATH
- export LD_LIBRARY_PATH=$OML_THIRDPARTY/sundials/sundials-6.2.0/linux64/lib:$OML_THIRDPARTY/qhull/qhull-2015.2/lib:$LD_LIBRARY_PATH
- export LD_LIBRARY_PATH=$OML_ROOT/src/bin/linux64:$LD_LIBRARY_PATH
- export LD_LIBRARY_PATH=/usr/bin:/usr/lib:/usr/lib64:/usr/lib/x86_64-linux-gnu:/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
- g++ --version
- $CXX --version
- which $CXX
- gfortran --version
- which gfortran
- ls -alF /usr/lib/x86_64-linux-gnu | grep fortran
##- ls -alF /lib/x86_64-linux-gnu | grep fortran
- set | grep LD_LIBRARY_PATH
- set | grep OML
- cd $OML_THIRDPARTY/intel
- find . -name "*mkl*.so"
- cd $OML_THIRDPARTY/ANTLR
- find . -iname "libantlr3c*"
- echo ==============================
- echo ==============================
- echo $LD_LIBRARY_PATH
- echo $OML_ROOT
- echo $OML_THIRDPARTY
- echo $PATH
- cd $OML_ROOT/src
- ls -alF
- make -f makefile.open
after_success:
- ls -alF $OML_ROOT/src/bin/linux64
- ldd $OML_ROOT/src/bin/linux64/omlconsole
- cd $OML_ROOT/Tests && pwd
- source run_tests.sh
- cd $OML_ROOT/Tests && pwd
- source run_toolbox_tests.sh
- cd $OML_ROOT/Tests && pwd
- source evaluate_test_results.sh
#compiler: gcc
